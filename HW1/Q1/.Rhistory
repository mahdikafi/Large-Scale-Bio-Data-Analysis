protein <- ""
for (idx in seq(s, nchar(dna)-2, 3))
{
found = FALSE
c <- substr(dna, idx, idx+2)
row <- which(codon_df["codon"] == c)
a <- codon_df[["codon_let"]][row]
if (a == "stop")
{
found = TRUE
break
}
protein <- paste0(protein, a)
}
if (found)
{
amino_acids <- c(amino_acids, protein)
}
}
return (amino_acids)
}
dna <- readline(prompt = "Enter the DNA please (if enter \"assignemt\" dna would be the same as in the assignment): ")
{
dna <- "AGCCATGTAGCTAACTCAGGTTACATGGGGATGACCCCGCGACTTGGATTAGAGTCTCTTTTGGAATAAGCCTGAATGATCCGAGTAGCATCTCAG"
}
mahdi <- readLines(con=stdin(), n= 1)
codon <- c("TTT", "TTC", "TTA", "TTG", "CTT", "CTC", "CTA", "CTG", "ATT", "ATC", "ATA", "ATG", "GTT", "GTC", "GTA", "GTG", "TCT", "TCC", "TCA", "TCG", "CCT", "CCC", "CCA", "CCG", "ACT", "ACC", "ACA", "ACG", "GCT", "GCC", "GCA", "GCG", "TAT", "TAC", "TAA", "TAG", "CAT", "CAC", "CAA", "CAG", "AAT", "AAC", "AAA", "AAG", "GAT", "GAC", "GAA", "GAG", "TGT", "TGC", "TGA", "TGG", "CGT", "CGC", "CGA", "CGG", "AGT", "AGC", "AGA", "AGG", "GGT", "GGC", "GGA", "GGG")
codon_let <- c(rep("F", 2), rep("L", 2), rep("L", 4), rep("I", 3), "M", rep("V", 4), rep("S", 4), rep("P", 4), rep("T", 4), rep("A", 4), rep("Y", 2), rep("stop", 2), rep("H", 2), rep("Q", 2), rep("N", 2), rep("K", 2), rep("D", 2), rep("E", 2), rep("C", 2), "stop", "W", rep("R", 4), rep("S", 2), rep("R", 2), rep("G", 4))
codon_df <- data.frame(codon, codon_let)
aa <- vector()
aa <- dna_to_amino_acid(dna)
aa <- c(aa, dna_to_amino_acid(dna_rev))
print(unique(aa))
reverse_complement <- function(str)
{
rev_comp <- ""
for (idx in 1:nchar(str))
{
nuc <- substr(str, idx, idx)
if (nuc == "A")
{
rev_comp <- paste0("T", rev_comp)
}
else if (nuc == "C")
{
rev_comp <- paste0("G", rev_comp)
}
else if (nuc == "G")
{
rev_comp <- paste0("C", rev_comp)
}
else if (nuc == "T")
{
rev_comp <- paste0("A", rev_comp)
}
}
return (rev_comp)
}
dna_to_amino_acid <- function (dna)
{
amino_acids <- vector()
for (s in 1:(nchar(dna)-2))
{
start_codon <- substr(dna, s, s+2)
if (start_codon != "ATG")
{
next
}
protein <- ""
for (idx in seq(s, nchar(dna)-2, 3))
{
found = FALSE
c <- substr(dna, idx, idx+2)
row <- which(codon_df["codon"] == c)
a <- codon_df[["codon_let"]][row]
if (a == "stop")
{
found = TRUE
break
}
protein <- paste0(protein, a)
}
if (found)
{
amino_acids <- c(amino_acids, protein)
}
}
return (amino_acids)
}
dna <- readline(prompt = "Enter the DNA please (if enter \"assignemt\" dna would be the same as in the assignment): ")
{
dna <- "AGCCATGTAGCTAACTCAGGTTACATGGGGATGACCCCGCGACTTGGATTAGAGTCTCTTTTGGAATAAGCCTGAATGATCCGAGTAGCATCTCAG"
}
dna_rev <- reverse_complement(dna)
codon <- c("TTT", "TTC", "TTA", "TTG", "CTT", "CTC", "CTA", "CTG", "ATT", "ATC", "ATA", "ATG", "GTT", "GTC", "GTA", "GTG", "TCT", "TCC", "TCA", "TCG", "CCT", "CCC", "CCA", "CCG", "ACT", "ACC", "ACA", "ACG", "GCT", "GCC", "GCA", "GCG", "TAT", "TAC", "TAA", "TAG", "CAT", "CAC", "CAA", "CAG", "AAT", "AAC", "AAA", "AAG", "GAT", "GAC", "GAA", "GAG", "TGT", "TGC", "TGA", "TGG", "CGT", "CGC", "CGA", "CGG", "AGT", "AGC", "AGA", "AGG", "GGT", "GGC", "GGA", "GGG")
codon_let <- c(rep("F", 2), rep("L", 2), rep("L", 4), rep("I", 3), "M", rep("V", 4), rep("S", 4), rep("P", 4), rep("T", 4), rep("A", 4), rep("Y", 2), rep("stop", 2), rep("H", 2), rep("Q", 2), rep("N", 2), rep("K", 2), rep("D", 2), rep("E", 2), rep("C", 2), "stop", "W", rep("R", 4), rep("S", 2), rep("R", 2), rep("G", 4))
codon_df <- data.frame(codon, codon_let)
aa <- vector()
aa <- dna_to_amino_acid(dna)
aa <- c(aa, dna_to_amino_acid(dna_rev))
print(unique(aa))
reverse_complement <- function(str)
{
rev_comp <- ""
for (idx in 1:nchar(str))
{
nuc <- substr(str, idx, idx)
if (nuc == "A")
{
rev_comp <- paste0("T", rev_comp)
}
else if (nuc == "C")
{
rev_comp <- paste0("G", rev_comp)
}
else if (nuc == "G")
{
rev_comp <- paste0("C", rev_comp)
}
else if (nuc == "T")
{
rev_comp <- paste0("A", rev_comp)
}
}
return (rev_comp)
}
dna_to_amino_acid <- function (dna)
{
amino_acids <- vector()
for (s in 1:(nchar(dna)-2))
{
start_codon <- substr(dna, s, s+2)
if (start_codon != "ATG")
{
next
}
protein <- ""
for (idx in seq(s, nchar(dna)-2, 3))
{
found = FALSE
c <- substr(dna, idx, idx+2)
row <- which(codon_df["codon"] == c)
a <- codon_df[["codon_let"]][row]
if (a == "stop")
{
found = TRUE
break
}
protein <- paste0(protein, a)
}
if (found)
{
amino_acids <- c(amino_acids, protein)
}
}
return (amino_acids)
}
dna <- readline(prompt = "Enter the DNA please (if enter \"assignemt\" dna would be the same as in the assignment): ")
if (input == "assignment")
{
dna <- "AGCCATGTAGCTAACTCAGGTTACATGGGGATGACCCCGCGACTTGGATTAGAGTCTCTTTTGGAATAAGCCTGAATGATCCGAGTAGCATCTCAG"
}
dna_rev <- reverse_complement(dna)
codon <- c("TTT", "TTC", "TTA", "TTG", "CTT", "CTC", "CTA", "CTG", "ATT", "ATC", "ATA", "ATG", "GTT", "GTC", "GTA", "GTG", "TCT", "TCC", "TCA", "TCG", "CCT", "CCC", "CCA", "CCG", "ACT", "ACC", "ACA", "ACG", "GCT", "GCC", "GCA", "GCG", "TAT", "TAC", "TAA", "TAG", "CAT", "CAC", "CAA", "CAG", "AAT", "AAC", "AAA", "AAG", "GAT", "GAC", "GAA", "GAG", "TGT", "TGC", "TGA", "TGG", "CGT", "CGC", "CGA", "CGG", "AGT", "AGC", "AGA", "AGG", "GGT", "GGC", "GGA", "GGG")
codon_let <- c(rep("F", 2), rep("L", 2), rep("L", 4), rep("I", 3), "M", rep("V", 4), rep("S", 4), rep("P", 4), rep("T", 4), rep("A", 4), rep("Y", 2), rep("stop", 2), rep("H", 2), rep("Q", 2), rep("N", 2), rep("K", 2), rep("D", 2), rep("E", 2), rep("C", 2), "stop", "W", rep("R", 4), rep("S", 2), rep("R", 2), rep("G", 4))
codon_df <- data.frame(codon, codon_let)
aa <- vector()
aa <- dna_to_amino_acid(dna)
aa <- c(aa, dna_to_amino_acid(dna_rev))
print(unique(aa))
reverse_complement <- function(str)
{
rev_comp <- ""
for (idx in 1:nchar(str))
{
nuc <- substr(str, idx, idx)
if (nuc == "A")
{
rev_comp <- paste0("T", rev_comp)
}
else if (nuc == "C")
{
rev_comp <- paste0("G", rev_comp)
}
else if (nuc == "G")
{
rev_comp <- paste0("C", rev_comp)
}
else if (nuc == "T")
{
rev_comp <- paste0("A", rev_comp)
}
}
return (rev_comp)
}
dna_to_amino_acid <- function (dna)
{
amino_acids <- vector()
for (s in 1:(nchar(dna)-2))
{
start_codon <- substr(dna, s, s+2)
if (start_codon != "ATG")
{
next
}
protein <- ""
for (idx in seq(s, nchar(dna)-2, 3))
{
found = FALSE
c <- substr(dna, idx, idx+2)
row <- which(codon_df["codon"] == c)
a <- codon_df[["codon_let"]][row]
if (a == "stop")
{
found = TRUE
break
}
protein <- paste0(protein, a)
}
if (found)
{
amino_acids <- c(amino_acids, protein)
}
}
return (amino_acids)
}
dna <- readline(prompt = "Enter the DNA please (if enter \"assignemt\" dna would be the same as in the assignment): ")
if (input == "assignment")
{
dna <- "AGCCATGTAGCTAACTCAGGTTACATGGGGATGACCCCGCGACTTGGATTAGAGTCTCTTTTGGAATAAGCCTGAATGATCCGAGTAGCATCTCAG"
}
dna_rev <- reverse_complement(dna)
codon <- c("TTT", "TTC", "TTA", "TTG", "CTT", "CTC", "CTA", "CTG", "ATT", "ATC", "ATA", "ATG", "GTT", "GTC", "GTA", "GTG", "TCT", "TCC", "TCA", "TCG", "CCT", "CCC", "CCA", "CCG", "ACT", "ACC", "ACA", "ACG", "GCT", "GCC", "GCA", "GCG", "TAT", "TAC", "TAA", "TAG", "CAT", "CAC", "CAA", "CAG", "AAT", "AAC", "AAA", "AAG", "GAT", "GAC", "GAA", "GAG", "TGT", "TGC", "TGA", "TGG", "CGT", "CGC", "CGA", "CGG", "AGT", "AGC", "AGA", "AGG", "GGT", "GGC", "GGA", "GGG")
codon_let <- c(rep("F", 2), rep("L", 2), rep("L", 4), rep("I", 3), "M", rep("V", 4), rep("S", 4), rep("P", 4), rep("T", 4), rep("A", 4), rep("Y", 2), rep("stop", 2), rep("H", 2), rep("Q", 2), rep("N", 2), rep("K", 2), rep("D", 2), rep("E", 2), rep("C", 2), "stop", "W", rep("R", 4), rep("S", 2), rep("R", 2), rep("G", 4))
codon_df <- data.frame(codon, codon_let)
aa <- vector()
aa <- dna_to_amino_acid(dna)
aa <- c(aa, dna_to_amino_acid(dna_rev))
print(unique(aa))
reverse_complement <- function(str)
{
rev_comp <- ""
for (idx in 1:nchar(str))
{
nuc <- substr(str, idx, idx)
if (nuc == "A")
{
rev_comp <- paste0("T", rev_comp)
}
else if (nuc == "C")
{
rev_comp <- paste0("G", rev_comp)
}
else if (nuc == "G")
{
rev_comp <- paste0("C", rev_comp)
}
else if (nuc == "T")
{
rev_comp <- paste0("A", rev_comp)
}
}
return (rev_comp)
}
dna_to_amino_acid <- function (dna)
{
amino_acids <- vector()
for (s in 1:(nchar(dna)-2))
{
start_codon <- substr(dna, s, s+2)
if (start_codon != "ATG")
{
next
}
protein <- ""
for (idx in seq(s, nchar(dna)-2, 3))
{
found = FALSE
c <- substr(dna, idx, idx+2)
row <- which(codon_df["codon"] == c)
a <- codon_df[["codon_let"]][row]
if (a == "stop")
{
found = TRUE
break
}
protein <- paste0(protein, a)
}
if (found)
{
amino_acids <- c(amino_acids, protein)
}
}
return (amino_acids)
}
dna <- readline(prompt = "Enter the DNA please (if enter \"assignemt\" dna would be the same as in the assignment): ")
if (dna == "assignment")
{
dna <- "AGCCATGTAGCTAACTCAGGTTACATGGGGATGACCCCGCGACTTGGATTAGAGTCTCTTTTGGAATAAGCCTGAATGATCCGAGTAGCATCTCAG"
}
dna_rev <- reverse_complement(dna)
codon <- c("TTT", "TTC", "TTA", "TTG", "CTT", "CTC", "CTA", "CTG", "ATT", "ATC", "ATA", "ATG", "GTT", "GTC", "GTA", "GTG", "TCT", "TCC", "TCA", "TCG", "CCT", "CCC", "CCA", "CCG", "ACT", "ACC", "ACA", "ACG", "GCT", "GCC", "GCA", "GCG", "TAT", "TAC", "TAA", "TAG", "CAT", "CAC", "CAA", "CAG", "AAT", "AAC", "AAA", "AAG", "GAT", "GAC", "GAA", "GAG", "TGT", "TGC", "TGA", "TGG", "CGT", "CGC", "CGA", "CGG", "AGT", "AGC", "AGA", "AGG", "GGT", "GGC", "GGA", "GGG")
codon_let <- c(rep("F", 2), rep("L", 2), rep("L", 4), rep("I", 3), "M", rep("V", 4), rep("S", 4), rep("P", 4), rep("T", 4), rep("A", 4), rep("Y", 2), rep("stop", 2), rep("H", 2), rep("Q", 2), rep("N", 2), rep("K", 2), rep("D", 2), rep("E", 2), rep("C", 2), "stop", "W", rep("R", 4), rep("S", 2), rep("R", 2), rep("G", 4))
codon_df <- data.frame(codon, codon_let)
aa <- vector()
aa <- dna_to_amino_acid(dna)
aa <- c(aa, dna_to_amino_acid(dna_rev))
print(unique(aa))
reverse_complement <- function(str)
{
rev_comp <- ""
for (idx in 1:nchar(str))
{
nuc <- substr(str, idx, idx)
if (nuc == "A")
{
rev_comp <- paste0("T", rev_comp)
}
else if (nuc == "C")
{
rev_comp <- paste0("G", rev_comp)
}
else if (nuc == "G")
{
rev_comp <- paste0("C", rev_comp)
}
else if (nuc == "T")
{
rev_comp <- paste0("A", rev_comp)
}
}
return (rev_comp)
}
dna_to_amino_acid <- function (dna)
{
amino_acids <- vector()
for (s in 1:(nchar(dna)-2))
{
start_codon <- substr(dna, s, s+2)
if (start_codon != "ATG")
{
next
}
protein <- ""
for (idx in seq(s, nchar(dna)-2, 3))
{
found = FALSE
c <- substr(dna, idx, idx+2)
row <- which(codon_df["codon"] == c)
a <- codon_df[["codon_let"]][row]
if (a == "stop")
{
found = TRUE
break
}
protein <- paste0(protein, a)
}
if (found)
{
amino_acids <- c(amino_acids, protein)
}
}
return (amino_acids)
}
dna <- readline(prompt = "Enter the DNA please (if enter \"assignemt\" dna would be the same as in the assignment): ")
{
dna <- "AGCCATGTAGCTAACTCAGGTTACATGGGGATGACCCCGCGACTTGGATTAGAGTCTCTTTTGGAATAAGCCTGAATGATCCGAGTAGCATCTCAG"
}
dna_rev <- reverse_complement(dna)
codon <- c("TTT", "TTC", "TTA", "TTG", "CTT", "CTC", "CTA", "CTG", "ATT", "ATC", "ATA", "ATG", "GTT", "GTC", "GTA", "GTG", "TCT", "TCC", "TCA", "TCG", "CCT", "CCC", "CCA", "CCG", "ACT", "ACC", "ACA", "ACG", "GCT", "GCC", "GCA", "GCG", "TAT", "TAC", "TAA", "TAG", "CAT", "CAC", "CAA", "CAG", "AAT", "AAC", "AAA", "AAG", "GAT", "GAC", "GAA", "GAG", "TGT", "TGC", "TGA", "TGG", "CGT", "CGC", "CGA", "CGG", "AGT", "AGC", "AGA", "AGG", "GGT", "GGC", "GGA", "GGG")
codon_let <- c(rep("F", 2), rep("L", 2), rep("L", 4), rep("I", 3), "M", rep("V", 4), rep("S", 4), rep("P", 4), rep("T", 4), rep("A", 4), rep("Y", 2), rep("stop", 2), rep("H", 2), rep("Q", 2), rep("N", 2), rep("K", 2), rep("D", 2), rep("E", 2), rep("C", 2), "stop", "W", rep("R", 4), rep("S", 2), rep("R", 2), rep("G", 4))
codon_df <- data.frame(codon, codon_let)
aa <- vector()
aa <- dna_to_amino_acid(dna)
aa <- c(aa, dna_to_amino_acid(dna_rev))
print(unique(aa))
reverse_complement <- function(str)
{
rev_comp <- ""
for (idx in 1:nchar(str))
{
nuc <- substr(str, idx, idx)
if (nuc == "A")
{
rev_comp <- paste0("T", rev_comp)
}
else if (nuc == "C")
{
rev_comp <- paste0("G", rev_comp)
}
else if (nuc == "G")
{
rev_comp <- paste0("C", rev_comp)
}
else if (nuc == "T")
{
rev_comp <- paste0("A", rev_comp)
}
}
return (rev_comp)
}
dna_to_amino_acid <- function (dna)
{
amino_acids <- vector()
for (s in 1:(nchar(dna)-2))
{
start_codon <- substr(dna, s, s+2)
if (start_codon != "ATG")
{
next
}
protein <- ""
for (idx in seq(s, nchar(dna)-2, 3))
{
found = FALSE
c <- substr(dna, idx, idx+2)
row <- which(codon_df["codon"] == c)
a <- codon_df[["codon_let"]][row]
if (a == "stop")
{
found = TRUE
break
}
protein <- paste0(protein, a)
}
if (found)
{
amino_acids <- c(amino_acids, protein)
}
}
return (amino_acids)
}
dna <- readline(prompt = "Enter the DNA please (if enter \"assignemt\" dna would be the same as in the assignment): ")
{
dna <- "AGCCATGTAGCTAACTCAGGTTACATGGGGATGACCCCGCGACTTGGATTAGAGTCTCTTTTGGAATAAGCCTGAATGATCCGAGTAGCATCTCAG"
}
dna_rev <- reverse_complement(dna)
codon <- c("TTT", "TTC", "TTA", "TTG", "CTT", "CTC", "CTA", "CTG", "ATT", "ATC", "ATA", "ATG", "GTT", "GTC", "GTA", "GTG", "TCT", "TCC", "TCA", "TCG", "CCT", "CCC", "CCA", "CCG", "ACT", "ACC", "ACA", "ACG", "GCT", "GCC", "GCA", "GCG", "TAT", "TAC", "TAA", "TAG", "CAT", "CAC", "CAA", "CAG", "AAT", "AAC", "AAA", "AAG", "GAT", "GAC", "GAA", "GAG", "TGT", "TGC", "TGA", "TGG", "CGT", "CGC", "CGA", "CGG", "AGT", "AGC", "AGA", "AGG", "GGT", "GGC", "GGA", "GGG")
codon_let <- c(rep("F", 2), rep("L", 2), rep("L", 4), rep("I", 3), "M", rep("V", 4), rep("S", 4), rep("P", 4), rep("T", 4), rep("A", 4), rep("Y", 2), rep("stop", 2), rep("H", 2), rep("Q", 2), rep("N", 2), rep("K", 2), rep("D", 2), rep("E", 2), rep("C", 2), "stop", "W", rep("R", 4), rep("S", 2), rep("R", 2), rep("G", 4))
codon_df <- data.frame(codon, codon_let)
aa <- vector()
aa <- dna_to_amino_acid(dna)
aa <- c(aa, dna_to_amino_acid(dna_rev))
print(unique(aa))
reverse_complement <- function(str)
{
rev_comp <- ""
for (idx in 1:nchar(str))
{
nuc <- substr(str, idx, idx)
if (nuc == "A")
{
rev_comp <- paste0("T", rev_comp)
}
else if (nuc == "C")
{
rev_comp <- paste0("G", rev_comp)
}
else if (nuc == "G")
{
rev_comp <- paste0("C", rev_comp)
}
else if (nuc == "T")
{
rev_comp <- paste0("A", rev_comp)
}
}
return (rev_comp)
}
dna_to_amino_acid <- function (dna)
{
amino_acids <- vector()
for (s in 1:(nchar(dna)-2))
{
start_codon <- substr(dna, s, s+2)
if (start_codon != "ATG")
{
next
}
protein <- ""
for (idx in seq(s, nchar(dna)-2, 3))
{
found = FALSE
c <- substr(dna, idx, idx+2)
row <- which(codon_df["codon"] == c)
a <- codon_df[["codon_let"]][row]
if (a == "stop")
{
found = TRUE
break
}
protein <- paste0(protein, a)
}
if (found)
{
amino_acids <- c(amino_acids, protein)
}
}
return (amino_acids)
}
dna <- readline(prompt = "Enter the DNA please (if enter \"default\" dna would be the same as in the assignment): ")
{
dna <- "AGCCATGTAGCTAACTCAGGTTACATGGGGATGACCCCGCGACTTGGATTAGAGTCTCTTTTGGAATAAGCCTGAATGATCCGAGTAGCATCTCAG"
}
dna_rev <- reverse_complement(dna)
codon <- c("TTT", "TTC", "TTA", "TTG", "CTT", "CTC", "CTA", "CTG", "ATT", "ATC", "ATA", "ATG", "GTT", "GTC", "GTA", "GTG", "TCT", "TCC", "TCA", "TCG", "CCT", "CCC", "CCA", "CCG", "ACT", "ACC", "ACA", "ACG", "GCT", "GCC", "GCA", "GCG", "TAT", "TAC", "TAA", "TAG", "CAT", "CAC", "CAA", "CAG", "AAT", "AAC", "AAA", "AAG", "GAT", "GAC", "GAA", "GAG", "TGT", "TGC", "TGA", "TGG", "CGT", "CGC", "CGA", "CGG", "AGT", "AGC", "AGA", "AGG", "GGT", "GGC", "GGA", "GGG")
codon_let <- c(rep("F", 2), rep("L", 2), rep("L", 4), rep("I", 3), "M", rep("V", 4), rep("S", 4), rep("P", 4), rep("T", 4), rep("A", 4), rep("Y", 2), rep("stop", 2), rep("H", 2), rep("Q", 2), rep("N", 2), rep("K", 2), rep("D", 2), rep("E", 2), rep("C", 2), "stop", "W", rep("R", 4), rep("S", 2), rep("R", 2), rep("G", 4))
codon_df <- data.frame(codon, codon_let)
aa <- vector()
aa <- dna_to_amino_acid(dna)
aa <- c(aa, dna_to_amino_acid(dna_rev))
print(unique(aa))
