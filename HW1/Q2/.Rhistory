data
typeof(data)
data
typeof(spl1)
data[["type"]]
typeof(data[["type"]])
typeof(data[["coordinates"]])
typeof(spl1[["coordinates"]])
data
data[["coordinates"]]
sort(data[["coordinates"]])
data
exons
genemodel.plot(model = data, start = , bpstop = 93307582, orientation = "reverse", xaxis = TRUE)
genemodel.plot(model = data, start = 93297493, bpstop = 93307582, orientation = "reverse", xaxis = TRUE)
genemodel.plot(model=spl1, start=1, bpstop=350, orientation="reverse", xaxis=T)
test <- data.frame(c("5' utr", "coding_region", "intron", "coding_region", "3' utr"), c("100-200", "200-300", "300-400", "400-500", "500-600"))
test
typeof(test)
test
colnames(test) <- c("type", "coordinates")
test
genemodel.plot(model = test, start = 100, bpstop = 600, orientation = "reverse")
genemodel.plot(model = test, start = 100, bpstop = 600, orientation = "reverse")
genemodel.plot(model = test, start = 100, bpstop = 600, orientation = "reverse", xaxis = TRUE)
genemodel.plot(model = test, start = 100, bpstop = 600, orientation = "reverse", xaxis = TRUE)
spl1<-data.frame(
type=c("5' utr", "coding_region", "intron", "coding_region", "intron", "coding_region","3' utr"),
coordinates=c("1-50", "50-100", "100-150", "150-200", "200-250", "250-300","300-350"))
genemodel.plot(model = spl1)
test
test <- data.frame(c("5' utr", "coding_region", "intron", "coding_region", "3' utr"), c("1-100", "100-200", "200-300", "300-400", "400-500"))
tese
test
colnames(test) <- c("type", "coordinates")
test
genemodel.plot(model = test, start = 1, bpstop = 500, orientation = "reverse")
genemodel.plot(model = test, start = 1000, bpstop = 1500, orientation = "reverse")
ranges(exons)
ranges(exons)[[1]]
ranges(exons)[[1]]-93000000
exons
ranges(exons)
ranges(exons)[[1]]
ranges(exons)[[1]][1]
start(ranges(exons)[[1]])
start(ranges(exons)[[1]]) - 93000000
ranges(exons[[1]])
r <- ranges(exons[[1]])
r
start(r)
start(r) <- start(r) - start(r) + 1
start(r)
r <- ranges(exons[[1]])
start(r)
start(r) <- start(r) - start(r)[1] + 1
start(r)
bpstart <- ranges(exons[[1]])
bpstart
library(BSgenome)
library(BSgenome.Hsapiens.UCSC.hg19)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
library(genemodel)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
#A
#symbol = readline(prompt = "Enter the gene symbol: ")
symbol <- "RPL5"
gene_id <- select(org.Hs.eg.db, keys = symbol, keytype = "SYMBOL", columns = "ENTREZID")$ENTREZID
txs <-select(txdb, keys = gene_id, keytype = "GENEID", columns = c("TXID", "TXNAME"))
print(txs)
#B
chr <- select(txdb, keys = gene_id, keytype = "GENEID", columns = "EXONCHROM")$EXONCHROM
chr_length <- seqlengths(Hsapiens)[[chr]]
exons <- select(txdb, keys = gene_id, keytype = "GENEID", columns = c("EXONSTART", "EXONEND"))
starts <- exons[["EXONSTART"]]
ends <- exons[["EXONEND"]]
start <- min(starts)
end <- max(ends)
gene_length <- end - start + 1
print(gene_length/chr_length)
###############
tx_names <- txs$TXNAME
exons <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names[1]]
introns <- intronsByTranscript(txdb, use.names = TRUE)[tx_names[1]]
type <- vector()
ranges(exons)
utr_5 <- start(ranges(exons)[[1]][1])
utr_5
exon_range <- ranges(exons)[[1]]
exon_range
exon_range <- ranges(exons)[[1]]
exon_range
utr_5
bpstart <- utr_5 - 100
bpstart
exon_range
start(exon_range)
start(exon_range) - bpstart
start(exon_range) <- start(exon_range) - bpstart
exon_range
end(exon_range) <- end(exon_range) - bpstart
exon_range
exons_interval <- as.character(exon_range)
exons_interval
ranges(exons)[[1]]
93298946 - 93297674
1452 - 180
type <- vector()
exon_range <- ranges(exons)[[1]]
utr_5 <- start(ranges(exons)[[1]][1])
bpstart <- utr_5 - 100
start(exon_range) <- start(exon_range) - bpstart
end(exon_range) <- end(exon_range) - bpstart
exons_interval <- as.character(exon_range)
type <- rep("coding_region", length(exons_interval))
intron_range <- ranges(introns)[[1]]
intron_range
intron_range <- ranges(introns)[[1]]
start(intron_range) <- start(intron_range) - bpstart
end(intron_range) <- end(intron_range) - bpstart
intron_interval <- as.character(intron_range)
type <- c(type, rep("intron", length(intron_interval)))
utr_5
utr_5 <- paste(c(utr_5 - 101, utr_5-1), collapse = "-")
type <- c(type, "5' utr")
end(ranges(exons)[[1]][length(ranges(exons)[[1]])])
utr_5 <- "1-100"
utr_5
utr_3
end(ranges(exons)[[1]][length(ranges(exons)[[1]])])
end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) - bpstart
utr_3 <- end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) - bpstart
utr_3
utr_3 <- paste(c(utr_3, utr_3+10), collapse = "-")
type <- c(type, "3' utr")
coordinates <- c(exons_interval, intron_interval, utr_5, utr_3)
data <- data.frame(type, coordinates)
data
genemodel.plot(model = data, start = 1, bpstop = 9997, orientation = "reverse", xaxis = TRUE)
bpstop <- end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) + 100
genemodel.plot(model = data, start = bpstart, bpstop = bpstop, orientation = "reverse", xaxis = TRUE)
exons
exons[[1]]
genemodel.plot(model = data, start = bpstart, bpstop = bpstop, orientation = "reverse")
genemodel.plot(model = data, start = bpstart, bpstop = bpstop, orientation = "reverse")
data
ranges(exons)[[1]]
bpstart
bpstop
exons
exonsBy(txdb, "tx", use.names = TRUE)
exonsBy(txdb, "tx", use.names = TRUE)[tx_names]
exonsBy(txdb, "tx", use.names = TRUE)[tx_names][1]
mahdi <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names]
mahdi
mahdi[1]
mahdi[2]
mahdi[3]
mahdi[4]
mahdi[5]
for (i in mahdi)
{print(i)}
mahdi
length(mahdi)
for (i in 1:length(mahdi)){print(mahdi[i])}
exonsBy(txdb, "tx", use.names = TRUE)[tx_names[1]]
#exons <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names[1]]
#introns <- intronsByTranscript(txdb, use.names = TRUE)[tx_names[1]]
#################
exons <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names]
introns <- intronsByTranscript(txdb, use.names = TRUE)[tx_names]
length(introns)
#exons <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names[1]]
#introns <- intronsByTranscript(txdb, use.names = TRUE)[tx_names[1]]
#################
exons_all <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names]
introns_all <- intronsByTranscript(txdb, use.names = TRUE)[tx_names]
exons_all
exons_all[1]
library(BSgenome)
library(BSgenome.Hsapiens.UCSC.hg19)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
library(genemodel)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
#A
#symbol = readline(prompt = "Enter the gene symbol: ")
symbol <- "RPL5"
gene_id <- select(org.Hs.eg.db, keys = symbol, keytype = "SYMBOL", columns = "ENTREZID")$ENTREZID
txs <-select(txdb, keys = gene_id, keytype = "GENEID", columns = c("TXID", "TXNAME"))
print(txs)
#B
chr <- select(txdb, keys = gene_id, keytype = "GENEID", columns = "EXONCHROM")$EXONCHROM
chr_length <- seqlengths(Hsapiens)[[chr]]
exons <- select(txdb, keys = gene_id, keytype = "GENEID", columns = c("EXONSTART", "EXONEND"))
starts <- exons[["EXONSTART"]]
ends <- exons[["EXONEND"]]
start <- min(starts)
end <- max(ends)
gene_length <- end - start + 1
print(gene_length/chr_length)
###############
tx_names <- txs$TXNAME
#exons <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names[1]]
#introns <- intronsByTranscript(txdb, use.names = TRUE)[tx_names[1]]
#################
exons_all <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names]
introns_all <- intronsByTranscript(txdb, use.names = TRUE)[tx_names]
for (i in 1:length(exons_all))
{
exons <- exons_all[i]
introns <- introns_all[i]
type <- vector()
exon_range <- ranges(exons)[[1]]
utr_5 <- start(ranges(exons)[[1]][1])
bpstart <- utr_5 - 100
start(exon_range) <- start(exon_range) - bpstart
end(exon_range) <- end(exon_range) - bpstart
exons_interval <- as.character(exon_range)
type <- rep("coding_region", length(exons_interval))
intron_range <- ranges(introns)[[1]]
start(intron_range) <- start(intron_range) - bpstart
end(intron_range) <- end(intron_range) - bpstart
intron_interval <- as.character(intron_range)
type <- c(type, rep("intron", length(intron_interval)))
utr_5 <- "1-100"
type <- c(type, "5' utr")
utr_3 <- end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) - bpstart
utr_3 <- paste(c(utr_3, utr_3+10), collapse = "-")
type <- c(type, "3' utr")
coordinates <- c(exons_interval, intron_interval, utr_5, utr_3)
data <- data.frame(type, coordinates)
bpstop <- end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) + 100
genemodel.plot(model = data, start = bpstart, bpstop = bpstop, orientation = "reverse")
}
for (i in 5:1){}
for (i in 5:1){print(i)}
library(BSgenome)
library(BSgenome.Hsapiens.UCSC.hg19)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
library(genemodel)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
#A
#symbol = readline(prompt = "Enter the gene symbol: ")
symbol <- "RPL5"
gene_id <- select(org.Hs.eg.db, keys = symbol, keytype = "SYMBOL", columns = "ENTREZID")$ENTREZID
txs <-select(txdb, keys = gene_id, keytype = "GENEID", columns = c("TXID", "TXNAME"))
print(txs)
#B
chr <- select(txdb, keys = gene_id, keytype = "GENEID", columns = "EXONCHROM")$EXONCHROM
chr_length <- seqlengths(Hsapiens)[[chr]]
exons <- select(txdb, keys = gene_id, keytype = "GENEID", columns = c("EXONSTART", "EXONEND"))
starts <- exons[["EXONSTART"]]
ends <- exons[["EXONEND"]]
start <- min(starts)
end <- max(ends)
gene_length <- end - start + 1
print(gene_length/chr_length)
###############
tx_names <- txs$TXNAME
#exons <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names[1]]
#introns <- intronsByTranscript(txdb, use.names = TRUE)[tx_names[1]]
#################
exons_all <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names]
introns_all <- intronsByTranscript(txdb, use.names = TRUE)[tx_names]
for (i in length(exons_all):1)
{
exons <- exons_all[i]
introns <- introns_all[i]
type <- vector()
exon_range <- ranges(exons)[[1]]
utr_5 <- start(ranges(exons)[[1]][1])
bpstart <- utr_5 - 100
start(exon_range) <- start(exon_range) - bpstart
end(exon_range) <- end(exon_range) - bpstart
exons_interval <- as.character(exon_range)
type <- rep("coding_region", length(exons_interval))
intron_range <- ranges(introns)[[1]]
start(intron_range) <- start(intron_range) - bpstart
end(intron_range) <- end(intron_range) - bpstart
intron_interval <- as.character(intron_range)
type <- c(type, rep("intron", length(intron_interval)))
utr_5 <- "1-100"
type <- c(type, "5' utr")
utr_3 <- end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) - bpstart
utr_3 <- paste(c(utr_3, utr_3+10), collapse = "-")
type <- c(type, "3' utr")
coordinates <- c(exons_interval, intron_interval, utr_5, utr_3)
data <- data.frame(type, coordinates)
bpstop <- end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) + 100
genemodel.plot(model = data, start = bpstart, bpstop = bpstop, orientation = "reverse")
}
library(BSgenome)
library(BSgenome.Hsapiens.UCSC.hg19)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
library(genemodel)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
#A
#symbol = readline(prompt = "Enter the gene symbol: ")
symbol <- "RPL5"
gene_id <- select(org.Hs.eg.db, keys = symbol, keytype = "SYMBOL", columns = "ENTREZID")$ENTREZID
txs <-select(txdb, keys = gene_id, keytype = "GENEID", columns = c("TXID", "TXNAME"))
print(txs)
#B
chr <- select(txdb, keys = gene_id, keytype = "GENEID", columns = "EXONCHROM")$EXONCHROM
chr_length <- seqlengths(Hsapiens)[[chr]]
exons <- select(txdb, keys = gene_id, keytype = "GENEID", columns = c("EXONSTART", "EXONEND"))
starts <- exons[["EXONSTART"]]
ends <- exons[["EXONEND"]]
start <- min(starts)
end <- max(ends)
gene_length <- end - start + 1
print(gene_length/chr_length)
###############
tx_names <- txs$TXNAME
#exons <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names[1]]
#introns <- intronsByTranscript(txdb, use.names = TRUE)[tx_names[1]]
#################
exons_all <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names]
introns_all <- intronsByTranscript(txdb, use.names = TRUE)[tx_names]
for (i in length(exons_all):1)
{
exons <- exons_all[i]
introns <- introns_all[i]
type <- vector()
exon_range <- ranges(exons)[[1]]
utr_5 <- start(ranges(exons)[[1]][1])
bpstart <- utr_5 - 100
start(exon_range) <- start(exon_range) - bpstart
end(exon_range) <- end(exon_range) - bpstart
exons_interval <- as.character(exon_range)
type <- rep("coding_region", length(exons_interval))
intron_range <- ranges(introns)[[1]]
start(intron_range) <- start(intron_range) - bpstart
end(intron_range) <- end(intron_range) - bpstart
intron_interval <- as.character(intron_range)
type <- c(type, rep("intron", length(intron_interval)))
utr_5 <- "1-100"
type <- c(type, "5' utr")
utr_3 <- end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) - bpstart
utr_3 <- paste(c(utr_3, utr_3+10), collapse = "-")
type <- c(type, "3' utr")
coordinates <- c(exons_interval, intron_interval, utr_5, utr_3)
data <- data.frame(type, coordinates)
bpstop <- end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) + 100
genemodel.plot(model = data, start = bpstart, bpstop = bpstop, orientation = "reverse")
}
library(BSgenome)
library(BSgenome.Hsapiens.UCSC.hg19)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
library(genemodel)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
#A
#symbol = readline(prompt = "Enter the gene symbol: ")
symbol <- "RPL5"
gene_id <- select(org.Hs.eg.db, keys = symbol, keytype = "SYMBOL", columns = "ENTREZID")$ENTREZID
txs <-select(txdb, keys = gene_id, keytype = "GENEID", columns = c("TXID", "TXNAME"))
print(txs)
#B
chr <- select(txdb, keys = gene_id, keytype = "GENEID", columns = "EXONCHROM")$EXONCHROM
chr_length <- seqlengths(Hsapiens)[[chr]]
exons <- select(txdb, keys = gene_id, keytype = "GENEID", columns = c("EXONSTART", "EXONEND"))
starts <- exons[["EXONSTART"]]
ends <- exons[["EXONEND"]]
start <- min(starts)
end <- max(ends)
gene_length <- end - start + 1
print(gene_length/chr_length)
#########################################
#Genemodel Plot
tx_names <- txs$TXNAME
exons_all <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names]
introns_all <- intronsByTranscript(txdb, use.names = TRUE)[tx_names]
for (i in length(exons_all):1)
{
exons <- exons_all[i]
introns <- introns_all[i]
type <- vector()
exon_range <- ranges(exons)[[1]]
utr_5 <- start(ranges(exons)[[1]][1])
bpstart <- utr_5 - 100
start(exon_range) <- start(exon_range) - bpstart
end(exon_range) <- end(exon_range) - bpstart
exons_interval <- as.character(exon_range)
type <- rep("coding_region", length(exons_interval))
intron_range <- ranges(introns)[[1]]
start(intron_range) <- start(intron_range) - bpstart
end(intron_range) <- end(intron_range) - bpstart
intron_interval <- as.character(intron_range)
type <- c(type, rep("intron", length(intron_interval)))
utr_5 <- "1-100"
type <- c(type, "5' utr")
utr_3 <- end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) - bpstart
utr_3 <- paste(c(utr_3, utr_3+10), collapse = "-")
type <- c(type, "3' utr")
coordinates <- c(exons_interval, intron_interval, utr_5, utr_3)
data <- data.frame(type, coordinates)
bpstop <- end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) + 100
genemodel.plot(model = data, start = bpstart, bpstop = bpstop, orientation = "reverse")
}
library(BSgenome)
library(BSgenome.Hsapiens.UCSC.hg19)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
library(genemodel)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
#A
#symbol = readline(prompt = "Enter the gene symbol: ")
symbol <- "RPL5"
gene_id <- select(org.Hs.eg.db, keys = symbol, keytype = "SYMBOL", columns = "ENTREZID")$ENTREZID
txs <-select(txdb, keys = gene_id, keytype = "GENEID", columns = c("TXID", "TXNAME"))
print(txs)
#B
chr <- select(txdb, keys = gene_id, keytype = "GENEID", columns = "EXONCHROM")$EXONCHROM
chr_length <- seqlengths(Hsapiens)[[chr]]
exons <- select(txdb, keys = gene_id, keytype = "GENEID", columns = c("EXONSTART", "EXONEND"))
starts <- exons[["EXONSTART"]]
ends <- exons[["EXONEND"]]
start <- min(starts)
end <- max(ends)
gene_length <- end - start + 1
print(gene_length/chr_length)
#########################################
#Genemodel Plot
tx_names <- txs$TXNAME
exons_all <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names]
introns_all <- intronsByTranscript(txdb, use.names = TRUE)[tx_names]
for (i in length(exons_all):1)
{
exons <- exons_all[i]
introns <- introns_all[i]
type <- vector()
exon_range <- ranges(exons)[[1]]
utr_5 <- start(ranges(exons)[[1]][1])
bpstart <- utr_5 - 100
start(exon_range) <- start(exon_range) - bpstart
end(exon_range) <- end(exon_range) - bpstart
exons_interval <- as.character(exon_range)
type <- rep("coding_region", length(exons_interval))
intron_range <- ranges(introns)[[1]]
start(intron_range) <- start(intron_range) - bpstart
end(intron_range) <- end(intron_range) - bpstart
intron_interval <- as.character(intron_range)
type <- c(type, rep("intron", length(intron_interval)))
utr_5 <- "1-100"
type <- c(type, "5' utr")
utr_3 <- end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) - bpstart
utr_3 <- paste(c(utr_3, utr_3+10), collapse = "-")
type <- c(type, "3' utr")
coordinates <- c(exons_interval, intron_interval, utr_5, utr_3)
data <- data.frame(type, coordinates)
bpstop <- end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) + 100
genemodel.plot(model = data, start = bpstart, bpstop = bpstop, orientation = "reverse")
}
library(BSgenome)
library(BSgenome.Hsapiens.UCSC.hg19)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
library(genemodel)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
#A
#symbol = readline(prompt = "Enter the gene symbol: ")
symbol <- "RPL5"
gene_id <- select(org.Hs.eg.db, keys = symbol, keytype = "SYMBOL", columns = "ENTREZID")$ENTREZID
txs <-select(txdb, keys = gene_id, keytype = "GENEID", columns = c("TXID", "TXNAME"))
print(txs)
#B
chr <- select(txdb, keys = gene_id, keytype = "GENEID", columns = "EXONCHROM")$EXONCHROM
chr_length <- seqlengths(Hsapiens)[[chr]]
exons <- select(txdb, keys = gene_id, keytype = "GENEID", columns = c("EXONSTART", "EXONEND"))
starts <- exons[["EXONSTART"]]
ends <- exons[["EXONEND"]]
start <- min(starts)
end <- max(ends)
gene_length <- end - start + 1
print(gene_length/chr_length)
#########################################
#Genemodel Plot
tx_names <- txs$TXNAME
exons_all <- exonsBy(txdb, "tx", use.names = TRUE)[tx_names]
introns_all <- intronsByTranscript(txdb, use.names = TRUE)[tx_names]
for (i in length(exons_all):1)
{
exons <- exons_all[i]
introns <- introns_all[i]
type <- vector()
exon_range <- ranges(exons)[[1]]
utr_5 <- start(ranges(exons)[[1]][1])
bpstart <- utr_5 - 100
start(exon_range) <- start(exon_range) - bpstart
end(exon_range) <- end(exon_range) - bpstart
exons_interval <- as.character(exon_range)
type <- rep("coding_region", length(exons_interval))
intron_range <- ranges(introns)[[1]]
start(intron_range) <- start(intron_range) - bpstart
end(intron_range) <- end(intron_range) - bpstart
intron_interval <- as.character(intron_range)
type <- c(type, rep("intron", length(intron_interval)))
utr_5 <- "1-100"
type <- c(type, "5' utr")
utr_3 <- end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) - bpstart
utr_3 <- paste(c(utr_3, utr_3+10), collapse = "-")
type <- c(type, "3' utr")
coordinates <- c(exons_interval, intron_interval, utr_5, utr_3)
data <- data.frame(type, coordinates)
bpstop <- end(ranges(exons)[[1]][length(ranges(exons)[[1]])]) + 100
genemodel.plot(model = data, start = bpstart, bpstop = bpstop, orientation = "reverse")
}
