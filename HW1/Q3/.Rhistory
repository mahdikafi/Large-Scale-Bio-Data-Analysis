sum(in_indices == 1)
sum(in_indices == 5000000)
for (idx in in_indices)
{
print(idx)
}
sub[5000000]
sub[5000001]
sub[5000000]
sample(1:5)
sample(c("A", "B"))
sample(c("A", "B"))
sample(c("A", "B"))
sample(c("A", "B"))
sample(c("A", "B"), 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
c("a", "b", "c")
mahdi <- c("a", "b", "c")
mahdi
sub
BString(paste0())
paste0(c("M", "A"))
paste0(c("M", "A"), collapse = "")
paste(c("M", "A"))
paste(c("M", "A"), collapse = "")
BString(paste(sub, collapse = ""))
sub_seq <- BString(paste(sub, collapse = ""))
sub_seq
mahdi <- BString("MAHDI")
mahdi
subseq(mahdi, start = 1, stop=2)
subseq(mahdi, start = 1, end = 2)
sub
mahdi
mahdi[1]
mahdi[1] <- "TTT"
subseq(mahdi, start = 1, end = 1)
subseq(mahdi, start = 1, end = 1) <- "TTT"
subseq(mahdi, start = 1, end = 1) <- BString("TTT")
mahdi
vector(mahdi)
extractAt(mahdi, 5)
mahdi
kosar <- c("k", "o", "s", "a", "r")
kosar
kosar
kosar[1]
kosar[1] <- "T"
kosar
kosar[1] <- "TT"
kosar
kosar[1] <- c("T", "T")
kosar
sub_seq
mahdi
mahdi[1]
mahdi[1] <- "ZZZZ"
mahdi[1] <- BString("ZZZZ")
mahdi[1] <- "t"
mahdi
bio_sub <- BString(paste(sub, collapse = ""))
bio_sub
bio_sub[length(bio_sub)]
c("M", "MA")
bio_sub[499:500]
bio_sub[499:500]
c("a", BString("TG"))
c("a", BString("TG"))[1]
c("a", BString("TG"))[2]
typeof(c("a", BString("TG")))
data.frame(c("a", BString("TG")))
c(DNAString("ac"), DNAString("t"), DNAString("GG"))
c(BString("ac"), BString("g"))
toString(BString("GC"))
c(toString(BString("ca")), toString(BString("gg")))
mahdi
mahdi[1] <- "g"
mahdi
mahdi[1:2] <- "ga"
library(BSgenome)
library(Biostrings)
library(seqinr)
chr_19 <- read.fasta(file = "chr19.fa.gz", seqtype = "DNA", forceDNAtolower = TRUE)
sub_len <- 5000000
sub_idx <- sample(1:(length(chr_19[[1]]) - sub_len + 1), 1)
sub <- chr_19[[1]][sub_idx:(sub_idx + sub_len - 1)]
write.fasta(sequences = sub, names = "partof19", file.out = "partof19.fa")
#SNVs
snv_indices <- sample(1:length(sub), 400)
snv_ref_nucs <- sub[snv_indices]
snv_alt_nucs <- sample(c("a", "c", "g", "t"), 400, replace = TRUE)
sub[snv_indices] <- snv_alt_nucs
bio_sub <- BString(paste(sub, collapse = ""))
ins_indices <- sample(0:(length(sub)-1), 300)
ins_ref_nucs <- vector()
ins_alt_nucs <- vector()
sample("a", "c", "g", "t", 3)
sample(c("a", "c", "g", "t"), 3)
paste(sample(c("a", "c", "g", "t"), 3), collapse = "")
BString(paste(sample(c("a", "c", "g", "t"), 3), collapse = ""))
subseq(bio_sub, start = 1, end = 4)
toString(subseq(bio_sub, start = 1, end = 4))
mahdi <- BString("MAHDI")
mahdi
subseq(mahdi, start = 2, end = 2) <- BString("TTT")
mahdi
subseq(mahdi, start = 2, end = 2) <- BString("TTT")
mahdi
mahdi <- BString("MAHDI")
mahdi
subseq(mahdi, start = 2, end = 2) <- BString(paste(mahdi[2], "TTT"))
mahdi
subseq(mahdi, start = 2, end = 2) <- BString(paste(mahdi[2], "TTT", collapse = ""))
mahdi <- BString("MAHDI")
mahdi
subseq(mahdi, start = 2, end = 2) <- BString(paste(mahdi[2], "TTT", collapse = ""))
mahdi
mahdi <- BString("MAHDI")
mahdi
subseq(mahdi, start = 2, end = 2) <- BString(paste(c(mahdi[2], "TTT"), collapse = ""))
mahdi
mahdi[2]
toString(mahdi[2])
subseq(mahdi, start = 2, end = 2) <- BString(paste(c(toString(mahdi[2]), "TTT"), collapse = ""))
mahdi
library(BSgenome)
library(Biostrings)
library(seqinr)
chr_19 <- read.fasta(file = "chr19.fa.gz", seqtype = "DNA", forceDNAtolower = TRUE)
sub_len <- 5000000
sub_idx <- sample(1:(length(chr_19[[1]]) - sub_len + 1), 1)
sub <- chr_19[[1]][sub_idx:(sub_idx + sub_len - 1)]
write.fasta(sequences = sub, names = "partof19", file.out = "partof19.fa")
#SNVs
snv_indices <- sample(1:length(sub), 400)
snv_ref_nucs <- sub[snv_indices]
snv_alt_nucs <- sample(c("a", "c", "g", "t"), 400, replace = TRUE)
sub[snv_indices] <- snv_alt_nucs
bio_sub <- BString(paste(sub, collapse = ""))
#Insertion
ins_indices <- sample(0:(length(sub)-1), 300)
ins_ref_nucs <- vector()
ins_alt_nucs <- vector()
ins_positions <- vector()
for (ins_pos in ins_indices)
{
if (ins_pos == 0)
{
ins_len <- sample(1:5, 1)
ins_positions <- c(ins_positions, ins_len + 2)
ins_ref_nucs <- c(ins_ref_nucs, toString(subseq(bio_sub, start = 1, end = 1)))
subseq(bio_sub, start = 1, end = 1) <- BString(paste(c(toString(bio_sub[1]),sample(c("a", "c", "g", "t"), ins_len)), collapse = ""))
ins_alt_nucs <- c(ins_alt_nucs, toString(subseq(bio_sub, start = 1, end = 1+ins_len)))
}
else
{
ins_len <- sample(1:5, 1)
ins_positions <- c(ins_positions, ins_pos)
ins_ref_nucs <- c(ins_ref_nucs, toString(subseq(bio_sub, start = ins_pos, end = ins_pos+1)))
subseq(bio_sub, start = ins_pos+1, end = ins_pos+1) <- BString(paste(c(toString(bio_sub[ins_pos+1]), sample(c("a", "c", "g", "t"), ins_len)), collapse = ""))
ins_alt_nucs <- c(ins_alt_nucs, toString(subseq(bio, start = ins_pos, end = ins_pos + 1 + ins_len)))
}
}
library(BSgenome)
library(Biostrings)
library(seqinr)
chr_19 <- read.fasta(file = "chr19.fa.gz", seqtype = "DNA", forceDNAtolower = TRUE)
sub_len <- 5000000
sub_idx <- sample(1:(length(chr_19[[1]]) - sub_len + 1), 1)
sub <- chr_19[[1]][sub_idx:(sub_idx + sub_len - 1)]
write.fasta(sequences = sub, names = "partof19", file.out = "partof19.fa")
#SNVs
snv_indices <- sample(1:length(sub), 400)
snv_ref_nucs <- sub[snv_indices]
snv_alt_nucs <- sample(c("a", "c", "g", "t"), 400, replace = TRUE)
sub[snv_indices] <- snv_alt_nucs
bio_sub <- BString(paste(sub, collapse = ""))
#Insertion
ins_indices <- sample(0:(length(sub)-1), 300)
ins_ref_nucs <- vector()
ins_alt_nucs <- vector()
ins_positions <- vector()
for (ins_pos in ins_indices)
{
if (ins_pos == 0)
{
ins_len <- sample(1:5, 1)
ins_positions <- c(ins_positions, ins_len + 2)
ins_ref_nucs <- c(ins_ref_nucs, toString(subseq(bio_sub, start = 1, end = 1)))
subseq(bio_sub, start = 1, end = 1) <- BString(paste(c(toString(bio_sub[1]),sample(c("a", "c", "g", "t"), ins_len, replace = TRUE)), collapse = ""))
ins_alt_nucs <- c(ins_alt_nucs, toString(subseq(bio_sub, start = 1, end = 1+ins_len)))
}
else
{
ins_len <- sample(1:5, 1)
ins_positions <- c(ins_positions, ins_pos)
ins_ref_nucs <- c(ins_ref_nucs, toString(subseq(bio_sub, start = ins_pos, end = ins_pos+1)))
subseq(bio_sub, start = ins_pos+1, end = ins_pos+1) <- BString(paste(c(toString(bio_sub[ins_pos+1]), sample(c("a", "c", "g", "t"), ins_len, replace = TRUE)), collapse = ""))
ins_alt_nucs <- c(ins_alt_nucs, toString(subseq(bio, start = ins_pos, end = ins_pos + 1 + ins_len)))
}
}
library(BSgenome)
library(Biostrings)
library(seqinr)
chr_19 <- read.fasta(file = "chr19.fa.gz", seqtype = "DNA", forceDNAtolower = TRUE)
sub_len <- 5000000
sub_idx <- sample(1:(length(chr_19[[1]]) - sub_len + 1), 1)
sub <- chr_19[[1]][sub_idx:(sub_idx + sub_len - 1)]
write.fasta(sequences = sub, names = "partof19", file.out = "partof19.fa")
#SNVs
snv_indices <- sample(1:length(sub), 400)
snv_ref_nucs <- sub[snv_indices]
snv_alt_nucs <- sample(c("a", "c", "g", "t"), 400, replace = TRUE)
sub[snv_indices] <- snv_alt_nucs
bio_sub <- BString(paste(sub, collapse = ""))
#Insertion
ins_indices <- sample(0:(length(sub)-1), 300)
ins_ref_nucs <- vector()
ins_alt_nucs <- vector()
ins_positions <- vector()
for (ins_pos in ins_indices)
{
if (ins_pos == 0)
{
ins_len <- sample(1:5, 1)
ins_positions <- c(ins_positions, ins_len + 2)
ins_ref_nucs <- c(ins_ref_nucs, toString(subseq(bio_sub, start = 1, end = 1)))
subseq(bio_sub, start = 1, end = 1) <- BString(paste(c(toString(bio_sub[1]),sample(c("a", "c", "g", "t"), ins_len, replace = TRUE)), collapse = ""))
ins_alt_nucs <- c(ins_alt_nucs, toString(subseq(bio_sub, start = 1, end = 1+ins_len)))
}
else
{
ins_len <- sample(1:5, 1)
ins_positions <- c(ins_positions, ins_pos)
ins_ref_nucs <- c(ins_ref_nucs, toString(subseq(bio_sub, start = ins_pos, end = ins_pos+1)))
subseq(bio_sub, start = ins_pos+1, end = ins_pos+1) <- BString(paste(c(toString(bio_sub[ins_pos+1]), sample(c("a", "c", "g", "t"), ins_len, replace = TRUE)), collapse = ""))
ins_alt_nucs <- c(ins_alt_nucs, toString(subseq(bio_sub, start = ins_pos, end = ins_pos + 1 + ins_len)))
}
}
ins_ref_nucs
ins_alt_nucs
bio_sub
ins_ref_nucs[1]
ins_alt_nucs[1]
mahdi
subseq(mahdi, start = 1, end = 4)
subseq(mahdi, start = 1, end = 4) <- BString("M")
mahdi
mahdi
subseq(mahdi, start = 3, end = 3)
subseq(mahdi, start = 3, end = 10)
subseq(mahdi, start = 3, width = 5)
subseq(mahdi, start = 3, width = 5) <- BString("M")
length(bio_sub)
#Deletions
del_indices <- sample(0:(length(bio_sub)-1), 300)
del_ref_nucs <- vector()
del_alt_nucs <- vector()
del_positions <- vector()
if ("m"=="m")
{}
if ("m"=="m"){print("hello")}
if ("m"=="m" & 3==3){print("hello")}
if ("m"=="m" & 3==4){print("hello")}
if ("m"=="m" && 3==4){print("hello")}
if ("m"=="m" && 3==3){print("hello")}
mahdi
subseq(mahdi, start = 3, end = 3)
subseq(mahdi, start = 3, end = 5)
subseq(mahdi, start = 3, end = 5) <- ""
subseq(mahdi, start = 3, end = 5) <- NULL
mahdi
subseq(mahdi, start = 2, end = 4) <- NULL
mahdi[2:]
mahdi[1:2]
mahdi[:]
mahdi[1:]
#Deletions
del_indices <- sample(0:(length(bio_sub)-1), 300)
del_ref_nucs <- vector()
del_alt_nucs <- vector()
del_positions <- vector()
for (del_pos in del_indices)
{
if (del_pos >= 1 & del_pos <= (length(bio_sub)-5))
{
del_positions <- c(del_positions, del_pos)
del_len <- sample(1:5, 1)
del_ref_nucs <- c(del_ref_nucs, toString(subseq(bio_sub, start = del_pos, end = del_pos + del_len)))
del_alt_nucs <- c(del_alt_nucs, bio_sub[del_pos])
subseq(bio_sub, start = del_pos+1, end = del_pos+del_len) <- NULL
}
else if (del_pos >= (length(bio_sub)-4))
{
del_positions <- c(del_positions, del_pos)
del_len <- sample(1:(length(bio_sub)-del_pos))
del_ref_nucs <- c(del_ref_nucs, toString(subseq(bio_sub, start = del_pos, end = del_pos + del_len)))
del_alt_nucs <- c(del_alt_nucs, bio_sub[del_pos])
subseq(bio_sub, start = del_pos+1, end = del_pos+del_len) <- NULL
}
else if (del_pos == 0)
{
del_len <- sample(1:5, 1)
del_positions <- c(del_positions, 1+del_len)
del_ref_nucs <- c(del_ref_nucs, toString(subseq(bio_sub, start = 1, end = del_len+1)))
del_alt_nucs <- c(del_alt_nucs, bio_sub[del_len+1])
subseq(bio_sub, start = 1, end = del_len) <- NULL
}
}
del_ref_nucs
del_alt_nucs
mahdi
mahdi[1]
library(BSgenome)
library(Biostrings)
library(seqinr)
chr_19 <- read.fasta(file = "chr19.fa.gz", seqtype = "DNA", forceDNAtolower = TRUE)
sub_len <- 5000000
sub_idx <- sample(1:(length(chr_19[[1]]) - sub_len + 1), 1)
sub <- chr_19[[1]][sub_idx:(sub_idx + sub_len - 1)]
write.fasta(sequences = sub, names = "partof19", file.out = "partof19.fa")
#SNVs
snv_indices <- sample(1:length(sub), 400)
snv_ref_nucs <- sub[snv_indices]
snv_alt_nucs <- sample(c("a", "c", "g", "t"), 400, replace = TRUE)
sub[snv_indices] <- snv_alt_nucs
bio_sub <- BString(paste(sub, collapse = ""))
#Insertion
ins_indices <- sample(0:(length(sub)-1), 300)
ins_ref_nucs <- vector()
ins_alt_nucs <- vector()
ins_positions <- vector()
for (ins_pos in ins_indices)
{
if (ins_pos == 0)
{
ins_len <- sample(1:5, 1)
ins_positions <- c(ins_positions, ins_len + 2)
ins_ref_nucs <- c(ins_ref_nucs, toString(subseq(bio_sub, start = 1, end = 1)))
subseq(bio_sub, start = 1, end = 1) <- BString(paste(c(toString(bio_sub[1]),sample(c("a", "c", "g", "t"), ins_len, replace = TRUE)), collapse = ""))
ins_alt_nucs <- c(ins_alt_nucs, toString(subseq(bio_sub, start = 1, end = 1+ins_len)))
}
else
{
ins_len <- sample(1:5, 1)
ins_positions <- c(ins_positions, ins_pos)
ins_ref_nucs <- c(ins_ref_nucs, toString(subseq(bio_sub, start = ins_pos, end = ins_pos+1)))
subseq(bio_sub, start = ins_pos+1, end = ins_pos+1) <- BString(paste(c(toString(bio_sub[ins_pos+1]), sample(c("a", "c", "g", "t"), ins_len, replace = TRUE)), collapse = ""))
ins_alt_nucs <- c(ins_alt_nucs, toString(subseq(bio_sub, start = ins_pos, end = ins_pos + 1 + ins_len)))
}
}
#Deletions
del_indices <- sample(0:(length(bio_sub)-1), 300)
del_ref_nucs <- vector()
del_alt_nucs <- vector()
del_positions <- vector()
for (del_pos in del_indices)
{
if (del_pos >= 1 & del_pos <= (length(bio_sub)-5))
{
del_positions <- c(del_positions, del_pos)
del_len <- sample(1:5, 1)
del_ref_nucs <- c(del_ref_nucs, toString(subseq(bio_sub, start = del_pos, end = del_pos + del_len)))
del_alt_nucs <- c(del_alt_nucs, toString(bio_sub[del_pos]))
subseq(bio_sub, start = del_pos+1, end = del_pos+del_len) <- NULL
}
else if (del_pos >= (length(bio_sub)-4))
{
del_positions <- c(del_positions, del_pos)
del_len <- sample(1:(length(bio_sub)-del_pos))
del_ref_nucs <- c(del_ref_nucs, toString(subseq(bio_sub, start = del_pos, end = del_pos + del_len)))
del_alt_nucs <- c(del_alt_nucs, toString(bio_sub[del_pos]))
subseq(bio_sub, start = del_pos+1, end = del_pos+del_len) <- NULL
}
else if (del_pos == 0)
{
del_len <- sample(1:5, 1)
del_positions <- c(del_positions, 1+del_len)
del_ref_nucs <- c(del_ref_nucs, toString(subseq(bio_sub, start = 1, end = del_len+1)))
del_alt_nucs <- c(del_alt_nucs, toString(bio_sub[del_len+1]))
subseq(bio_sub, start = 1, end = del_len) <- NULL
}
}
length(bio_sub)
length(bio_sub)
del_alt_nucs
del_ref_nucs
ins_alt_nucs
ins_ref_nucs
write.fasta(sequences = bio_sub, names = "sample", file.out = "/Part1/Sample.fa")
write.fasta(sequences = bio_sub, names = "sample", file.out = "/Part1/Sample.fa")
write.fasta(sequences = bio_sub, names = "sample", file.out = "Part1/Sample.fa")
chr <- rep(19, 1000)
mahdi <- c("a", "b")
mahalanobis()
mahdi
koar <- c("C", "D")
koar
c(mahdi, koar)
pos <- c(snv_indices, ins_positions, del_positions)
ref <- c(snv_ref_nucs, ins_ref_nucs, del_ref_nucs)
alt <- c(snv_alt_nucs, ins_alt_nucs, del_alt_nucs)
length(chr)
length(pos)
length(ref)
length(alt)
data.frame(chr, pos, ref, alt)
vcf <- data.frame(chr, pos, ref, alt)
write.table(vcf, "Part1/Sample.vcf", sep = "\t")
write.table(vcf, "Part1/Sample.vcf", sep = "\t", row.names = FALSE)
write.table(vcf, "Part1/Sample.vcf", sep = "\t\t", row.names = FALSE)
write.table(vcf, "Part1/Sample.vcf", sep = "\t", row.names = FALSE)
CHROM <- rep(19, 1000)
POS <- c(snv_indices, ins_positions, del_positions)
REF <- c(snv_ref_nucs, ins_ref_nucs, del_ref_nucs)
ALT <- c(snv_alt_nucs, ins_alt_nucs, del_alt_nucs)
vcf <- data.frame(chr, pos, ref, alt)
write.table(vcf, "Part1/Sample.vcf", sep = "\t", row.names = FALSE)
vcf <- data.frame(CHROM, POS, REF, ALT)
write.table(vcf, "Part1/Sample.vcf", sep = "\t", row.names = FALSE)
library(BSgenome)
library(Biostrings)
library(seqinr)
chr_19 <- read.fasta(file = "chr19.fa.gz", seqtype = "DNA", forceDNAtolower = TRUE)
sub_len <- 5000000
sub_idx <- sample(1:(length(chr_19[[1]]) - sub_len + 1), 1)
sub <- chr_19[[1]][sub_idx:(sub_idx + sub_len - 1)]
write.fasta(sequences = sub, names = "partof19", file.out = "partof19.fa")
#SNVs
snv_indices <- sample(1:length(sub), 400)
snv_ref_nucs <- sub[snv_indices]
snv_alt_nucs <- sample(c("a", "c", "g", "t"), 400, replace = TRUE)
sub[snv_indices] <- snv_alt_nucs
bio_sub <- BString(paste(sub, collapse = ""))
#Insertion
ins_indices <- sample(0:(length(sub)-1), 300)
ins_ref_nucs <- vector()
ins_alt_nucs <- vector()
ins_positions <- vector()
for (ins_pos in ins_indices)
{
if (ins_pos == 0)
{
ins_len <- sample(1:5, 1)
ins_positions <- c(ins_positions, ins_len + 2)
ins_ref_nucs <- c(ins_ref_nucs, toString(subseq(bio_sub, start = 1, end = 1)))
subseq(bio_sub, start = 1, end = 1) <- BString(paste(c(toString(bio_sub[1]),sample(c("a", "c", "g", "t"), ins_len, replace = TRUE)), collapse = ""))
ins_alt_nucs <- c(ins_alt_nucs, toString(subseq(bio_sub, start = 1, end = 1+ins_len)))
}
else
{
ins_len <- sample(1:5, 1)
ins_positions <- c(ins_positions, ins_pos)
ins_ref_nucs <- c(ins_ref_nucs, toString(subseq(bio_sub, start = ins_pos, end = ins_pos+1)))
subseq(bio_sub, start = ins_pos+1, end = ins_pos+1) <- BString(paste(c(toString(bio_sub[ins_pos+1]), sample(c("a", "c", "g", "t"), ins_len, replace = TRUE)), collapse = ""))
ins_alt_nucs <- c(ins_alt_nucs, toString(subseq(bio_sub, start = ins_pos, end = ins_pos + 1 + ins_len)))
}
}
#Deletions
del_indices <- sample(0:(length(bio_sub)-1), 300)
del_ref_nucs <- vector()
del_alt_nucs <- vector()
del_positions <- vector()
for (del_pos in del_indices)
{
if (del_pos >= 1 & del_pos <= (length(bio_sub)-5))
{
del_positions <- c(del_positions, del_pos)
del_len <- sample(1:5, 1)
del_ref_nucs <- c(del_ref_nucs, toString(subseq(bio_sub, start = del_pos, end = del_pos + del_len)))
del_alt_nucs <- c(del_alt_nucs, toString(bio_sub[del_pos]))
subseq(bio_sub, start = del_pos+1, end = del_pos+del_len) <- NULL
}
else if (del_pos >= (length(bio_sub)-4))
{
del_positions <- c(del_positions, del_pos)
del_len <- sample(1:(length(bio_sub)-del_pos))
del_ref_nucs <- c(del_ref_nucs, toString(subseq(bio_sub, start = del_pos, end = del_pos + del_len)))
del_alt_nucs <- c(del_alt_nucs, toString(bio_sub[del_pos]))
subseq(bio_sub, start = del_pos+1, end = del_pos+del_len) <- NULL
}
else if (del_pos == 0)
{
del_len <- sample(1:5, 1)
del_positions <- c(del_positions, 1+del_len)
del_ref_nucs <- c(del_ref_nucs, toString(subseq(bio_sub, start = 1, end = del_len+1)))
del_alt_nucs <- c(del_alt_nucs, toString(bio_sub[del_len+1]))
subseq(bio_sub, start = 1, end = del_len) <- NULL
}
}
write.fasta(sequences = bio_sub, names = "sample", file.out = "Part1/Sample.fa")
CHROM <- rep(19, 1000)
POS <- c(snv_indices, ins_positions, del_positions)
REF <- c(snv_ref_nucs, ins_ref_nucs, del_ref_nucs)
ALT <- c(snv_alt_nucs, ins_alt_nucs, del_alt_nucs)
vcf <- data.frame(CHROM, POS, REF, ALT)
write.table(vcf, "Part1/Sample.vcf", sep = "\t", row.names = FALSE)
