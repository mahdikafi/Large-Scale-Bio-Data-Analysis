graph_10 <- graph_10[['wi']]
graph_10[graph_10 != 0] <- 1
tp <- sum(model[model == graph_10])
fn <- sum(model[graph_10 == 0])
tpr <- tp/(tp+fn)
#  print(tpr)
fp <- sum(graph_10[model==0])
tn <- sum(graph_10[model == 0] == 0)
fpr <- fp/(fp+tn)
#  print(fpr)
tprs_10 <- c(tprs_10, tpr)
fprs_10 <- c(fprs_10, fpr)
}
tprs_10 <- sort(tprs_10)
fprs_10 <- sort(fprs_10)
plot(fprs_10, tprs_10, type = 'l', col='red', xlab = 'FPR', ylab = 'TPR')
auc_10 <- AUC(fprs_10, tprs_10)
print(auc_10)
tprs_100 <- vector()
fprs_100 <- vector()
rows_100 <- sample(1:n_rows, size = 100)
samples_100 <- mapped_samples[rows_100, ]
x_100 <- var(samples_100)
for (rho in seq(0.0001, 1, 0.01)){
graph_100 <- glasso(x_100, rho = rho, nobs = 100)
graph_100 <- graph_100[['wi']]
graph_100[graph_100 != 0] <- 1
tp <- sum(model[model == graph_100])
fn <- sum(model[graph_100 == 0])
tpr <- tp/(tp+fn)
#  print(tpr)
fp <- sum(graph_100[model==0])
tn <- sum(graph_100[model == 0] == 0)
fpr <- fp/(fp+tn)
#  print(fpr)
tprs_100 <- c(tprs_100, tpr)
fprs_100 <- c(fprs_100, fpr)
}
tprs_100 <- sort(tprs_100)
fprs_100 <- sort(fprs_100)
lines(fprs_100, tprs_100, type = 'l', col='blue')
auc_100 <- AUC(fprs_100, tprs_100)
print(auc_100)
tprs_1000 <- vector()
fprs_1000 <- vector()
x_1000 <- var(mapped_samples)
for (rho in seq(0.0001, 1, 0.01)){
graph_1000 <- glasso(x_1000, rho = rho, nobs = 1000)
graph_1000 <- graph_1000[['wi']]
graph_1000[graph_1000 != 0] <- 1
tp <- sum(model[model == graph_1000])
fn <- sum(model[graph_1000 == 0])
tpr <- tp/(tp+fn)
#  print(tpr)
fp <- sum(graph_1000[model==0])
tn <- sum(graph_1000[model == 0] == 0)
fpr <- fp/(fp+tn)
#  print(fpr)
tprs_1000 <- c(tprs_1000, tpr)
fprs_1000 <- c(fprs_1000, fpr)
}
tprs_1000 <- sort(tprs_1000)
fprs_1000 <- sort(fprs_1000)
lines(fprs_1000, tprs_1000, type = 'l', col='green')
auc_1000 <- AUC(fp1000, tprs_1000)
auc_1000 <- AUC(fprs_1000, tprs_1000)
print(auc_1000)
legend("bottomright", legend=c(paste("10:", auc_10), paste("100:", auc_100), paste("1000:", auc_1000)),
col=c("red", "blue", "green"), lty = 1:2, cex=0.8)
paste('10', toString(AUC()))
# 3)
samples <- read.csv("Samples.csv")
head(samples)
samples <- samples[, 2:11]
head(samples)
dim(samples)
x <- var(samples)
x
dim(x)
graph <- glasso(x, nobs = 1000)
graph <- glasso(x,rho = .01, nobs = 1000)
type.convert()
graph
AIC(graph)
library(cglasso)
library(cglasso)
library(cglasso)
aic(graph)
cglasso.aic(graph)
# NOT RUN {
library("cglasso")
set.seed(123)
#################
# cglasso model #
#################
n <- 100L
p <- 5L
mu <- rep.int(0L, times = p)
X <- rdatacggm(n = n, mu = mu, probr = 0.05)
out <- cglasso(X = X)
out_aic <- aic(out)
out_aic
plot(out_aic)
out_bic <- bic(out)
out_bic
plot(out_bic)
# NOT RUN {
library("cglasso")
set.seed(123)
#################
# cglasso model #
#################
n <- 100L
p <- 5L
mu <- rep.int(0L, times = p)
X <- rdatacggm(n = n, mu = mu, probr = 0.05)
out <- cglasso(X = X)
out_aic <- aic(out)
out_aic
plot(out_aic)
out_bic <- bic(out)
out_bic
plot(out_bic)
#################
# cglasso model #
#################
X <- read.csv("Samples.csv")
out <- cglasso(X = X)
out <- cglasso(X = X)
out
#################
# cglasso model #
#################
X <- read.csv("Samples.csv")
out <- cglasso(X = X)
out_aic <- aic(out)
AIC(graph)
type(graph)
typeof(graph)
samples <- read.csv("Samples.csv")
samples <- samples[, 2:11]
samples
dim(samples)
x <- var(samples)
1:100/5
0.0001:1
seq(0.0001, 1, 0.01)
rho_list <- seq(0.0001, 1, 0.01)
library(glasso)
glasso.object <- glassopath(x, rholist = rho_list)
glasso.object
typeof(glasso.object)
AIC(glasso.object)
library(sAIC)
model
model <- read.csv("PrecisionMatrix.csv")
model
dim(model)
model <- model[, 2:21]
dim(model)
glasso.object
glasso.object$wi
glasso.object$wi[,, 10]
sAIC(x = model, beta = glasso.object$wi)
typeof(model)
model <- matrix(unlist(model), nrow = 20, ncol = 20)
sAIC(x = model, beta = glasso.object$wi[,,10], family = "ggm")
model
typeof(model)
model <- model[1:10, 1:10]
dim(model)
sAIC(x = model, beta = glasso.object$wi[,,10], family = "ggm")
sAIC(x = model, beta = glasso.object$wi, family = "ggm")
model <- model[1:10, 2:11]
# 3)
samples <- read.csv("Samples.csv")
samples <- samples[, 2:11]
model <- read.csv("PrecisionMatrix.csv")
model <- model[1:10, 2:11]
dim(model)
model
max(tprs_10)
model <- matrix(unlist(model), nrow = 10, ncol = 10)
model
x <- var(samples)
best_rho <- Inf
best_aic <- Inf
samples <- read.csv("Samples.csv")
samples <- samples[, 2:11]
model <- read.csv("PrecisionMatrix.csv")
model <- model[1:10, 2:11]
model <- matrix(unlist(model), nrow = 10, ncol = 10)
x <- var(samples)
best_rho <- Inf
best_aic <- Inf
for (rho in seq(0.0001, 1, 0.01)){
graph <- glasso(x, rho = rho, nobs = 1000)
aic <- sAIC(x = model, beta = graph$wi, family = "ggm")$AIC
if (aic < best_aic){
best_aic <- aic
best_rho <- rho
}
}
best_aic
best_rho
samples <- read.csv("Samples.csv")
samples_10 <- samples[, 2:11]
model <- read.csv("PrecisionMatrix.csv")
model_10 <- model[1:10, 2:11]
model_10 <- matrix(unlist(model_10), nrow = 10, ncol = 10)
x <- var(samples_10)
best_rho <- Inf
best_aic <- Inf
for (rho in seq(0.0001, 1, 0.01)){
graph <- glasso(x, rho = rho, nobs = 1000)
aic <- sAIC(x = model_10, beta = graph$wi, family = "ggm")$AIC
if (aic < best_aic){
best_aic <- aic
best_rho <- rho
}
}
samples
dim(samples)
dim(model)
best_rho
samples[, 2:21] == samples[2:21]
samples <- samples[2:21]
model
dim(model)
model <- model[2:21]
dim(model)
x <- var(samples)
graph <- glasso(x, rho = best_rho, nobs = 1000)
graph <- glasso(x, rho = best_rho, nobs = 1000)$wi
graph
dim(graph)
graph_aic <- glasso(x, rho = best_rho, nobs = 1000)$wi
print(graph_aic)
# BIC
samples <- read.csv("Samples.csv")
samples_10 <- samples[, 2:11]
model <- read.csv("PrecisionMatrix.csv")
model_10 <- model[1:10, 2:11]
model_10 <- matrix(unlist(model_10), nrow = 10, ncol = 10)
x <- var(samples_10)
best_rho <- Inf
best_bic <- Inf
# BIC
samples <- read.csv("Samples.csv")
samples_10 <- samples[, 2:11]
model <- read.csv("PrecisionMatrix.csv")
model_10 <- model[1:10, 2:11]
model_10 <- matrix(unlist(model_10), nrow = 10, ncol = 10)
x <- var(samples_10)
best_rho <- Inf
best_bic <- Inf
graph <- glasso(x, rho = 0.01, nobs = 1000)
library(sAIC)
library(sBIC)
graph
graph <- glasso(x, rho = 0.01, nobs = 1000)$wi
graph
dim(graph)
sBIC(graph, model_10)
library(qgraph)
# BIC
samples <- read.csv("Samples.csv")
samples_10 <- samples[, 2:11]
model <- read.csv("PrecisionMatrix.csv")
model_10 <- model[1:10, 2:11]
model_10 <- matrix(unlist(model_10), nrow = 10, ncol = 10)
x <- var(samples_10)
bic_graph <- EBICglasso(x, n = 1000, gamma = 0.5)
bic_graph
bic_graph <- EBICglasso(x, n = 10, gamma = 0.5)
x <- cor_auto(samples_10)
bic_graph <- EBICglasso(x, n = 10, gamma = 0.5)
samples_10
x
dim(x)
bic_graph <- EBICglasso(x, n = 1000, gamma = 0.5)
bic_graph <- EBICglasso(x, n = 1000, gamma = 0.5, lambda.min.ratio = 0.1)
bic_graph <- EBICglasso(x, n = 1000, gamma = 0.2, lambda.min.ratio = 0.1)
bic_graph
bic_graph <- EBICglasso(x, n = 10, gamma = 0.2, lambda.min.ratio = 0.1)
bic_graph <- EBICglasso(x, n = 10, gamma = 0.2, lambda.min.ratio = 0.1)
bic_graph
bic_graph <- EBICglasso(x, n = 10, gamma = 0.2, lambda.min.ratio = 1)
bic_graph <- EBICglasso(x, n = 10, gamma = 0.2, lambda.min.ratio = 10)
bic_graph
bic_graph <- EBICglasso(x, n = 10, gamma = 0.2, lambda.min.ratio = 10, nlambda = 1000)
bic_graph <- EBICglasso(x, n = 10, gamma = 0.2, lambda.min.ratio = 10, nlambda = 1000, threshold = TRUE)
bic_graph
bic_graph <- EBICglasso(x, n = 10, gamma = 0.1, lambda.min.ratio = 10, nlambda = 1000, threshold = TRUE)
bic_graph <- EBICglasso(x, n = 10, gamma = 0.1, lambda.min.ratio = 10, nlambda = 1000)
bic_graph <- EBICglasso(x, n = 1000, gamma = 0.1, lambda.min.ratio = 10, nlambda = 1000)
bic_graph <- EBICglasso(x, n = 1000, gamma = 0, lambda.min.ratio = 10, nlambda = 1000)
bic_graph
library(nethet)
library(nethet)
library(nethet)
# BIC
samples <- read.csv("Samples.csv")
samples_10 <- samples[, 2:11]
screen_bic.glasso(samples_10)
library(nethet)
# BIC
samples <- read.csv("Samples.csv")
samples_10 <- samples[, 2:11]
best_rho <- screen_bic.glasso(samples_10)
best_rho
best_rho <- screen_bic.glasso(samples_10)$rho.opt
best_rho
dim(samples)
graph_bic <- glasso(var(samples[2:21]), rho = best_rho, nobs = 1000)$wi
graph_bic
dim(graph_bic)
print(graph_bic)
library(glasso)
library(DescTools)
library(sAIC)
library(nethet)
model <- read.csv("PrecisionMatrix.csv")
model <- model[, 2:21]
samples <- read.csv("Samples.csv")
samples <- samples[2:21]
n_rows <- dim(samples)[1]
model[model != 0] <- 1
# 1)
tprs_10 <- vector()
fprs_10 <- vector()
rows_10 <- sample(1:n_rows, size = 10)
samples_10 <- samples[rows_10, ]
x_10 <- var(samples_10)
for (rho in seq(0.0001, 1, 0.01)){
graph_10 <- glasso(x_10, rho = rho, nobs = 10)
graph_10 <- graph_10[['wi']]
graph_10[graph_10 != 0] <- 1
tp <- sum(model[model == graph_10])
fn <- sum(model[graph_10 == 0])
tpr <- tp/(tp+fn)
#  print(tpr)
fp <- sum(graph_10[model==0])
tn <- sum(graph_10[model == 0] == 0)
fpr <- fp/(fp+tn)
#  print(fpr)
tprs_10 <- c(tprs_10, tpr)
fprs_10 <- c(fprs_10, fpr)
}
tprs_10 <- sort(tprs_10)
fprs_10 <- sort(fprs_10)
plot(fprs_10, tprs_10, type = 'l', col='red', xlab = 'FPR', ylab = 'TPR')
auc_10 <- AUC(fprs_10, tprs_10)
print(auc_10)
tprs_100 <- vector()
fprs_100 <- vector()
rows_100 <- sample(1:n_rows, size = 100)
samples_100 <- samples[rows_100, ]
x_100 <- var(samples_100)
for (rho in seq(0.0001, 1, 0.01)){
graph_100 <- glasso(x_100, rho = rho, nobs = 100)
graph_100 <- graph_100[['wi']]
graph_100[graph_100 != 0] <- 1
tp <- sum(model[model == graph_100])
fn <- sum(model[graph_100 == 0])
tpr <- tp/(tp+fn)
#  print(tpr)
fp <- sum(graph_100[model==0])
tn <- sum(graph_100[model == 0] == 0)
fpr <- fp/(fp+tn)
#  print(fpr)
tprs_100 <- c(tprs_100, tpr)
fprs_100 <- c(fprs_100, fpr)
}
tprs_100 <- sort(tprs_100)
fprs_100 <- sort(fprs_100)
lines(fprs_100, tprs_100, type = 'l', col='blue')
auc_100 <- AUC(fprs_100, tprs_100)
print(auc_100)
tprs_1000 <- vector()
fprs_1000 <- vector()
x_1000 <- var(samples)
for (rho in seq(0.0001, 1, 0.01)){
graph_1000 <- glasso(x_1000, rho = rho, nobs = 1000)
graph_1000 <- graph_1000[['wi']]
graph_1000[graph_1000 != 0] <- 1
tp <- sum(model[model == graph_1000])
fn <- sum(model[graph_1000 == 0])
tpr <- tp/(tp+fn)
#  print(tpr)
fp <- sum(graph_1000[model==0])
tn <- sum(graph_1000[model == 0] == 0)
fpr <- fp/(fp+tn)
#  print(fpr)
tprs_1000 <- c(tprs_1000, tpr)
fprs_1000 <- c(fprs_1000, fpr)
}
tprs_1000 <- sort(tprs_1000)
fprs_1000 <- sort(fprs_1000)
lines(fprs_1000, tprs_1000, type = 'l', col='green')
auc_1000 <- AUC(fprs_1000, tprs_1000)
print(auc_1000)
legend("bottomright", legend=c(paste("10:", auc_10), paste("100:", auc_100), paste("1000:", auc_1000)),
col=c("red", "blue", "green"), lty = 1:2, cex=0.8)
# 2)
samples <- read.csv("Samples.csv")
samples <- samples[2:21]
n_rows <- dim(samples)[1]
mapped_samples <- exp(samples)
tprs_10 <- vector()
fprs_10 <- vector()
rows_10 <- sample(1:n_rows, size = 10)
samples_10 <- mapped_samples[rows_10, ]
x_10 <- var(samples_10)
for (rho in seq(0.0001, 1, 0.01)){
graph_10 <- glasso(x_10, rho = rho, nobs = 10)
graph_10 <- graph_10[['wi']]
graph_10[graph_10 != 0] <- 1
tp <- sum(model[model == graph_10])
fn <- sum(model[graph_10 == 0])
tpr <- tp/(tp+fn)
#  print(tpr)
fp <- sum(graph_10[model==0])
tn <- sum(graph_10[model == 0] == 0)
fpr <- fp/(fp+tn)
#  print(fpr)
tprs_10 <- c(tprs_10, tpr)
fprs_10 <- c(fprs_10, fpr)
}
tprs_10 <- sort(tprs_10)
fprs_10 <- sort(fprs_10)
plot(fprs_10, tprs_10, type = 'l', col='red', xlab = 'FPR', ylab = 'TPR')
auc_10 <- AUC(fprs_10, tprs_10)
print(auc_10)
tprs_100 <- vector()
fprs_100 <- vector()
rows_100 <- sample(1:n_rows, size = 100)
samples_100 <- mapped_samples[rows_100, ]
x_100 <- var(samples_100)
for (rho in seq(0.0001, 1, 0.01)){
graph_100 <- glasso(x_100, rho = rho, nobs = 100)
graph_100 <- graph_100[['wi']]
graph_100[graph_100 != 0] <- 1
tp <- sum(model[model == graph_100])
fn <- sum(model[graph_100 == 0])
tpr <- tp/(tp+fn)
#  print(tpr)
fp <- sum(graph_100[model==0])
tn <- sum(graph_100[model == 0] == 0)
fpr <- fp/(fp+tn)
#  print(fpr)
tprs_100 <- c(tprs_100, tpr)
fprs_100 <- c(fprs_100, fpr)
}
tprs_100 <- sort(tprs_100)
fprs_100 <- sort(fprs_100)
lines(fprs_100, tprs_100, type = 'l', col='blue')
auc_100 <- AUC(fprs_100, tprs_100)
print(auc_100)
tprs_1000 <- vector()
fprs_1000 <- vector()
x_1000 <- var(mapped_samples)
for (rho in seq(0.0001, 1, 0.01)){
graph_1000 <- glasso(x_1000, rho = rho, nobs = 1000)
graph_1000 <- graph_1000[['wi']]
graph_1000[graph_1000 != 0] <- 1
tp <- sum(model[model == graph_1000])
fn <- sum(model[graph_1000 == 0])
tpr <- tp/(tp+fn)
#  print(tpr)
fp <- sum(graph_1000[model==0])
tn <- sum(graph_1000[model == 0] == 0)
fpr <- fp/(fp+tn)
#  print(fpr)
tprs_1000 <- c(tprs_1000, tpr)
fprs_1000 <- c(fprs_1000, fpr)
}
tprs_1000 <- sort(tprs_1000)
fprs_1000 <- sort(fprs_1000)
lines(fprs_1000, tprs_1000, type = 'l', col='green')
auc_1000 <- AUC(fprs_1000, tprs_1000)
print(auc_1000)
legend("bottomright", legend=c(paste("10:", auc_10), paste("100:", auc_100), paste("1000:", auc_1000)),
col=c("red", "blue", "green"), lty = 1:2, cex=0.8)
# AIC
samples <- read.csv("Samples.csv")
samples_10 <- samples[, 2:11]
model <- read.csv("PrecisionMatrix.csv")
model_10 <- model[1:10, 2:11]
model_10 <- matrix(unlist(model_10), nrow = 10, ncol = 10)
x <- var(samples_10)
best_rho <- Inf
best_aic <- Inf
for (rho in seq(0.0001, 1, 0.01)){
graph <- glasso(x, rho = rho, nobs = 1000)
aic <- sAIC(x = model_10, beta = graph$wi, family = "ggm")$AIC
if (aic < best_aic){
best_aic <- aic
best_rho <- rho
}
}
samples <- samples[2:21]
model <- model[2:21]
x <- var(samples)
graph_aic <- glasso(x, rho = best_rho, nobs = 1000)$wi
print(graph_aic)
# BIC
samples <- read.csv("Samples.csv")
samples_10 <- samples[, 2:11]
best_rho <- screen_bic.glasso(samples_10)$rho.opt
graph_bic <- glasso(var(samples[2:21]), rho = best_rho, nobs = 1000)$wi
print(graph_bic)
